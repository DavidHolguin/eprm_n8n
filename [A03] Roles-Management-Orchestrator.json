{
  "name": "[A03] Roles-Management-Orchestrator",
  "nodes": [
    {
      "parameters": {
        "channel": "task_updates",
        "additionalFields": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000001",
      "name": "Supabase Trigger",
      "type": "@n8n/n8n-nodes-supabase.supabaseTrigger",
      "typeVersion": 1,
      "position": [20, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "operation": "callFunction",
        "function": "public.claim_next_task",
        "arguments": {
          "agent_id": "A03"
        }
      },
      "id": "ef8b4d82-1234-4567-8901-000000000002",
      "name": "Supabase Function: claim_next_task",
      "type": "@n8n/n8n-nodes-supabase.supabase",
      "typeVersion": 1,
      "position": [240, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials", 
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.data.length > 0}}",
              "rightValue": "=true",
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000003",
      "name": "IF: Task Claimed?",
      "type": "@n8n/n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Parse task data from claim_next_task response\nconst taskData = $input.all()[0].json.data[0]; // First task from array\n\nreturn [{\n  json: {\n    taskId: taskData.id,\n    taskType: taskData.task_type,\n    parameters: taskData.parameters,\n    organizationId: taskData.organization_id,\n    creatorUserId: taskData.creator_user_id\n  }\n}];"
      },
      "id": "ef8b4d82-1234-4567-8901-000000000004",
      "name": "Code: Parse Task Data",
      "type": "@n8n/n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.taskType}}",
                    "rightValue": "create_organization",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "create_organization"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.taskType}}",
                    "rightValue": "create_user",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "create_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.taskType}}",
                    "rightValue": "assign_role_to_user",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "assign_role_to_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.taskType}}",
                    "rightValue": "request_role_acceptance_notification",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "request_role_acceptance_notification"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.taskType}}",
                    "rightValue": "generate_user_assignment_report",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "generate_user_assignment_report"
            }
          ]
        },
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000005",
      "name": "Switch: Route Task Type",
      "type": "@n8n/n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [900, 300]
    },
    {
      "parameters": {
        "workflowId": "[MCP-SUB] A03-CreateOrganization",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000006",
      "name": "Execute Workflow: [MCP-SUB] A03-CreateOrganization",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1120, 80],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "[MCP-SUB] A03-CreateUser",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000007",
      "name": "Execute Workflow: [MCP-SUB] A03-CreateUser",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1120, 200],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "[MCP-SUB] A03-AssignRoleToUser",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000008",
      "name": "Execute Workflow: [MCP-SUB] A03-AssignRoleToUser",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1120, 320],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "[MCP-SUB] A03-RequestRoleAcceptanceNotification",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000009",
      "name": "Execute Workflow: [MCP-SUB] A03-RequestRoleAcceptanceNotification",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1120, 440],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "[MCP-SUB] A03-GenerateUserAssignmentReport",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000010",
      "name": "Execute Workflow: [MCP-SUB] A03-GenerateUserAssignmentReport",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1120, 560],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "table": "tasks",
        "updateKey": "id",
        "fieldsToUpdate": {
          "status": "completed_success",
          "updated_at": "={{new Date().toISOString()}}"
        },
        "options": {
          "queryName": "id",
          "queryValue": "={{$json.taskId}}"
        }
      },
      "id": "ef8b4d82-1234-4567-8901-000000000011",
      "name": "Supabase: Update Task Status (Success)",
      "type": "@n8n/n8n-nodes-supabase.supabase",
      "typeVersion": 1,
      "position": [1340, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "[CORE] Handle-Error-and-Retry",
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-000000000012",
      "name": "Execute Workflow: [CORE] Handle-Error-and-Retry",
      "type": "@n8n/n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [1340, 500]
    },
    {
      "parameters": {},
      "id": "ef8b4d82-1234-4567-8901-000000000013",
      "name": "End (No Task)",
      "type": "@n8n/n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [680, 500]
    }
  ],
  "connections": {
    "Supabase Trigger": {
      "main": [
        [
          {
            "node": "Supabase Function: claim_next_task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Function: claim_next_task": {
      "main": [
        [
          {
            "node": "IF: Task Claimed?",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "IF: Task Claimed?": {
      "main": [
        [
          {
            "node": "Code: Parse Task Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "End (No Task)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code: Parse Task Data": {
      "main": [
        [
          {
            "node": "Switch: Route Task Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch: Route Task Type": {
      "main": [
        [
          {
            "node": "Execute Workflow: [MCP-SUB] A03-CreateOrganization",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [MCP-SUB] A03-CreateUser",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [MCP-SUB] A03-AssignRoleToUser",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [MCP-SUB] A03-RequestRoleAcceptanceNotification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [MCP-SUB] A03-GenerateUserAssignmentReport",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow: [MCP-SUB] A03-CreateOrganization": {
      "main": [
        [
          {
            "node": "Supabase: Update Task Status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [CORE] Handle-Error-and-Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow: [MCP-SUB] A03-CreateUser": {
      "main": [
        [
          {
            "node": "Supabase: Update Task Status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [CORE] Handle-Error-and-Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow: [MCP-SUB] A03-AssignRoleToUser": {
      "main": [
        [
          {
            "node": "Supabase: Update Task Status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [CORE] Handle-Error-and-Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow: [MCP-SUB] A03-RequestRoleAcceptanceNotification": {
      "main": [
        [
          {
            "node": "Supabase: Update Task Status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [CORE] Handle-Error-and-Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow: [MCP-SUB] A03-GenerateUserAssignmentReport": {
      "main": [
        [
          {
            "node": "Supabase: Update Task Status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow: [CORE] Handle-Error-and-Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "agent-03",
      "name": "Agent-03-Roles"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}