{
  "name": "[MCP-SUB] A03-CreateUser",
  "nodes": [
    {
      "parameters": {},
      "id": "ef8b4d82-1234-4567-8901-200000000001",
      "name": "Execute Sub-workflow Trigger",
      "type": "@n8n/n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [20, 320]
    },
    {
      "parameters": {
        "operation": "select",
        "table": "roles",
        "options": {
          "queryName": "name",
          "queryValue": "={{$json.role_name}}"
        }
      },
      "id": "ef8b4d82-1234-4567-8901-200000000002",
      "name": "Supabase: Fetch Role ID",
      "type": "@n8n/n8n-nodes-supabase.supabase",
      "typeVersion": 1,
      "position": [240, 320],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.data.length > 0}}",
              "rightValue": "=true",
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ef8b4d82-1234-4567-8901-200000000003",
      "name": "IF: Role Found?",
      "type": "@n8n/n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 320]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "users",
        "fields": {
          "id": "={{$json.auth_user_id}}",
          "organization_id": "={{$json.organization_id}}",
          "role_id": "={{$node[\"Supabase: Fetch Role ID\"].json.data[0].id}}",
          "full_name": "={{$json.full_name}}",
          "email": "={{$json.email}}",
          "phone_number": "={{$json.phone_number}}",
          "is_active": "=true"
        }
      },
      "id": "ef8b4d82-1234-4567-8901-200000000004",
      "name": "Supabase: Insert User",
      "type": "@n8n/n8n-nodes-supabase.supabase",
      "typeVersion": 1,
      "position": [680, 240],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Log user creation event\nconst userId = $input.all()[0].json.auth_user_id;\nconst fullName = $input.all()[0].json.full_name;\nconst roleName = $input.all()[0].json.role_name;\nconst organizationId = $input.all()[0].json.organization_id;\nconst taskId = $input.all()[0].json.task_id;\n\n// Prepare log event parameters\nconst logParams = {\n  log_level: 'INFO',\n  log_message: `Usuario creado: ${fullName} (ID: ${userId}, Rol: ${roleName})`,\n  task_id: taskId,\n  agent_id: 'A03',\n  details: { \n    user_id: userId,\n    organization_id: organizationId,\n    role_name: roleName,\n    full_name: fullName\n  }\n};\n\nreturn [{\n  json: {\n    user_id: userId,\n    log_params: logParams,\n    success: true\n  }\n}];"
      },
      "id": "ef8b4d82-1234-4567-8901-200000000005",
      "name": "Code: Log Event (User Created)",
      "type": "@n8n/n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 240]
    },
    {
      "parameters": {
        "operation": "callFunction",
        "function": "public.log_event",
        "arguments": "={{$json.log_params}}"
      },
      "id": "ef8b4d82-1234-4567-8901-200000000006",
      "name": "Supabase: Call Log Event",
      "type": "@n8n/n8n-nodes-supabase.supabase",
      "typeVersion": 1,
      "position": [1120, 240],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Return the user_id as the final output\nreturn [{\n  json: {\n    user_id: $input.all()[0].json.user_id,\n    success: true\n  }\n}];"
      },
      "id": "ef8b4d82-1234-4567-8901-200000000007",
      "name": "Code: Prepare Final Output",
      "type": "@n8n/n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 240]
    },
    {
      "parameters": {
        "jsCode": "// Handle role not found error\nthrow new Error('Role not found or invalid. Cannot create user without valid role.');"
      },
      "id": "ef8b4d82-1234-4567-8901-200000000008",
      "name": "Code: Role Not Found Error",
      "type": "@n8n/n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 400]
    }
  ],
  "connections": {
    "Execute Sub-workflow Trigger": {
      "main": [
        [
          {
            "node": "Supabase: Fetch Role ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase: Fetch Role ID": {
      "main": [
        [
          {
            "node": "IF: Role Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: Role Found?": {
      "main": [
        [
          {
            "node": "Supabase: Insert User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code: Role Not Found Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase: Insert User": {
      "main": [
        [
          {
            "node": "Code: Log Event (User Created)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code: Log Event (User Created)": {
      "main": [
        [
          {
            "node": "Supabase: Call Log Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase: Call Log Event": {
      "main": [
        [
          {
            "node": "Code: Prepare Final Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "agent-03-sub",
      "name": "Agent-03-Subworkflows"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}